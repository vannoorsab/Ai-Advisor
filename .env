# ================================
# AI Career Advisor - Environment Variables
# ================================

# ================================
# Firebase Configuration (Required)
# ================================

# Firebase Project Configuration (Get from Firebase Console > Project Settings)
VITE_FIREBASE_API_KEY=
VITE_FIREBASE_PROJECT_ID=
VITE_FIREBASE_APP_ID=

# Firebase Admin Service Account (Required for server-side operations)
# Get from Firebase Console > Project Settings > Service Accounts
# Generate new private key and paste the entire JSON content as a single line string
FIREBASE_SERVICE_ACCOUNT_KEY={"type":"service_account","project_id":"your_project_id","private_key_id":"...","private_key":"-----BEGIN PRIVATE KEY-----\n...\n-----END PRIVATE KEY-----\n","client_email":"...","client_id":"...","auth_uri":"https://accounts.google.com/o/oauth2/auth","token_uri":"https://oauth2.googleapis.com/token"}

# ================================
# AI Service Configuration
# ================================

# Google Gemini API Key (Primary AI service)
# Get from Google AI Studio: https://makersuite.google.com/app/apikey
GEMINI_API_KEY=

# Alternative: Google Cloud Vertex AI (if using Vertex AI instead of Gemini)
GOOGLE_AI_API_KEY=your_vertex_ai_key_here

# OpenAI API Key (Fallback AI service - Optional but recommended)
# Get from OpenAI Platform: https://platform.openai.com/api-keys
OPENAI_API_KEY=your_openai_api_key_here

# ================================
# Session and Security
# ================================

# Session Secret (Required for secure sessions)
# Generate a secure random string (e.g., using openssl rand -base64 32)
SESSION_SECRET=your_secure_session_secret_min_32_chars

# ================================
# External API Connectors (Optional - for future integrations)
# ================================

# Job Board APIs
NAUKRI_API_KEY=your_naukri_api_key
INDEED_API_KEY=your_indeed_api_key
LINKEDIN_API_KEY=your_linkedin_api_key
MONSTER_API_KEY=your_monster_api_key

# Educational Platform APIs
COURSERA_API_KEY=your_coursera_api_key
UDEMY_API_KEY=your_udemy_api_key
YOUTUBE_API_KEY=your_youtube_data_api_key

# ================================
# Development Configuration
# ================================

# Node Environment (development/production)
NODE_ENV=development

# Port Configuration (Optional - defaults to 5000)
PORT=3000

# Enable detailed logging (Optional)
DEBUG=ai-career-advisor:*

# ================================
# Replit-specific Configuration
# ================================

# Replit automatically provides these, but you can override if needed
# REPL_ID=your_repl_id
# REPL_SLUG=your_repl_slug
# REPL_OWNER=your_username

# ================================
# Setup Instructions
# ================================

# 1. Copy this file to .env: cp .env.example .env
# 
# 2. Firebase Setup:
#    - Go to https://console.firebase.google.com/
#    - Create a new project or select existing
#    - Enable Authentication (Email/Password + Google)
#    - Enable Firestore Database
#    - Enable Storage
#    - Get config from Project Settings
#
# 3. Get Firebase Service Account:
#    - Go to Project Settings > Service Accounts
#    - Generate new private key
#    - Copy entire JSON content as single line string
#
# 4. AI Services:
#    - Gemini: https://makersuite.google.com/app/apikey
#    - OpenAI: https://platform.openai.com/api-keys
#
# 5. Generate Session Secret:
#    - Run: openssl rand -base64 32
#    - Or use any secure random string generator
#
# 6. For Replit Deployment:
#    - Add all variables as Secrets in Replit
#    - Don't commit .env file to repository
#    - Add your Replit domain to Firebase Authorized Domains

# ================================
# Security Notes
# ================================

# - Never commit this file with actual values to version control
# - Use Replit Secrets for deployment
# - Rotate keys regularly, especially in production
# - Monitor API usage and set up billing alerts
# - Use least privilege principle for service accounts
# - Enable Firebase security rules and audit regularly

# ================================
# Cost Optimization Tips
# ================================

# - Set up billing alerts for AI APIs
# - Use caching to reduce API calls
# - Implement rate limiting to prevent abuse
# - Monitor Firestore read/write operations
# - Use Firebase Storage lifecycle rules for old files
# - Consider using free tier limits effectively

# ================================
# Troubleshooting
# ================================

# Common issues:
# - 403 errors: Check Firebase security rules
# - Auth errors: Verify authorized domains in Firebase
# - AI errors: Check API keys and quotas
# - CORS errors: Ensure proper domain configuration
# - File upload errors: Check Firebase Storage rules and size limits
